@{
}
<h1>Statistics</h1>
<script src="https://d3js.org/d3.v6.min.js"></script>


<svg id="firstGraph">

</svg>
<script>
    const data = [
        {color: "#f46d43", name: "123", month: 0, apples: 3840, bananas: 1920, cherries: 960, dates: 400 },
        {color: "#2af643", name: "456", month: 50, apples: 1600, bananas: 1440, cherries: 960, dates: 400 },
        {color: "#a4aaa3", name: "789", month: 100, apples: 640, bananas: 960, cherries: 640, dates: 400 },
        {color: "#c462c8", name: "10", month: 150, apples: 320, bananas: 480, cherries: 640, dates: 400 }
    ];
    const stack = d3.stack()
        .keys(["apples", "bananas", "cherries", "dates"])
        .order(d3.stackOrderNone)
        .offset(d3.stackOffsetNone);
    const series = stack(data);
    for (serie in series) {
        d3.area(serie);
    }
    console.log(series)

    var scale = d3.scaleLinear()
        .domain([0, d3.max(series.map(d => d[0][0]))])
        .range([0, 4000]);
 
    //const x = (d, i) => {
    //    d3.scaleBand()
    //        .domain(data.map(d => d.name))
    //        .range([margin.left, width - margin.right])
    //        .padding(0.1)
    //};


    //y = d3.scaleLinear()
    //    .domain([0, d3.max(series, d => d3.max(d, d => d[1]))])
    //    .rangeRound([height - margin.bottom, margin.top])

    var height = 600;
    var width = 600;
    d3.select("#firstGraph").attr("height", height).attr("width", width)
        .append("g")
        .selectAll("g")
        .data(series)
        .join("g")
            .attr("fill", d => d.color)
        .selectAll("rect")
        .data(d => d)
        .join("rect")
        //    .attr("x", d => d["data"].month)
        //.attr("y", d => d[1])
        .attr("x", d => (d["data"].month))
        .attr("y", 10)
            .attr("height", d => (d[1] - d[0])/10).attr("width", 35)
            .append("title")
        .text("sadasd")

</script>
