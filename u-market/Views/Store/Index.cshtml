@model u_market.Models.Store
<link rel="stylesheet" href="~/css/products.css" />
<link rel="stylesheet" href="~/css/store.css" />
<div class="header">
    <h1>store managment</h1>
    <h2>@ViewBag.StoreDetails.Name</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProduct">
        Add Product
    </button>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editStore">
        edit store
    </button>
</div>
<div class="products-table-container">
    <table class="table table-dark table-striped table-hover products-table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">name</th>
                <th scope="col">price</th>
                <th scope="col">description</th>
                <th scope="col">image</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody id="usersTableBody">
            @foreach (var product in @ViewBag.StoreDetails.Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                    <td><img src=@(product.ImageUrl!=null ? @product.ImageUrl : "https://www.allianceplast.com/wp-content/uploads/2017/11/no-image.png")
     class="product-image" alt=""></td>
                    <td><i class='fa fa-pen' onclick='openModalForUpdate("@product.Name", @product.Price, "@product.Description", "@product.ImageUrl", @product.Id)'></i></td>
                    <td><i class='fa fa-trash' onclick="deleteProduct(@product.Id)"></i></td>
                </tr>
            }
            </tbody>
    </table>
</div>

<!-- Modal product-->
<div class="modal fade" id="addProduct" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addProductLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductLabel">Add new product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="name" class="form-label">product name</label>
                    <input type="text" class="form-control" id="name" placeholder="basketball">
                </div>
                <div class="mb-3">
                    <label for="store" class="form-label">store name</label>
                    <input value="@ViewBag.StoreDetails.Name" disabled type="text" class="form-control" id="store">
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">price</label>
                    <input type="text" class="form-control" id="price" placeholder="3$">
                </div>
                <div class="mb-3">
                    <label for="image" class="form-label">image link</label>
                    <input type="text" class="form-control" id="image" placeholder="image">
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">description</label>
                    <textarea class="form-control" id="description" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">cancel</button>
                <button id="submit" onclick="saveProduct()" type="button" class="btn btn-primary">Add!</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal edit store-->
<div class="modal fade" id="editStore" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editStoreLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStoreLabel">Edit store</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="storeName" class="form-label">store name</label>
                    <input type="text" class="form-control" id="storeName" placeholder="basketball">
                </div>
                <div class="mb-3">
                    <label for="lat" class="form-label">store name</label>
                    <input type="text" class="form-control" id="lat" placeholder="basketball">
                </div>
                <div class="mb-3">
                    <label for="lang" class="form-label">store name</label>
                    <input type="text" class="form-control" id="lang" placeholder="basketball">
                </div>

                <div class="mb-3">
                    <label for="address" class="form-label">address</label>
                    <input type="text" class="form-control" autocomplete="off" id="address">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">cancel</button>
                <button id="submit" onclick="updateStore()" type="button" class="btn btn-primary">save</button>
            </div>
        </div>
    </div>
</div>
<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBH3CKQPJVqp2uyqXF9t0zQlPorVNaMhHU&callback=initMap"></script>
<script>
    address1Field = document.querySelector("#address");
    autocomplete = new google.maps.places.Autocomplete(address1Field, {
        componentRestrictions: { country: ["us", "ca"] },
        fields: ["address_components", "geometry"],
        types: ["address"],
    });
    address1Field.focus();

    function updateStore() {
        var storeData = {
            "Id": @ViewBag.StoreDetails.Id,
            "Name": $("#storeName").val(),
            "Lat": $("#lat").val(),
            "Lang": $("#lang").val(),
            "OwnerId": @ViewBag.StoreDetails.OwnerId,
        }
            $.post("/Store/UpdateStore", storeData, (data, status, xhr) => {
            if (status == "success") {
                alert("the store updated succesfully");
                window.location.href = "/Store/Index";
            } else {
                alert("error ocured while trying to update the store");
            }
        });
    }

    function saveProduct() {
        var formData = {
            "Name": $("#name").val(),
            "StoreId": @ViewBag.StoreDetails.Id,
            "Price": $("#price").val(),
            "ImageUrl": $("#image").val(),
            "Description": $("#description").val(),
        }
        $.post("/Store/AddProduct", formData, (data, status, xhr) => {
            if (status == "success") {
                alert("the product added succesfully");
                window.location.href = "/Store/Index";
            } else {
                alert("error ocured while trying to save the product");
            }
        });
    }
    const openModalForUpdate = (name, price, description, imageUrl, productId) => {
        $("#name").val(name);
        $("#price").val(price);
        $("#image").val(imageUrl);
        $("#description").val(description);
        $("#addProduct").find('#submit').attr('onclick', `UpdateProduct(${productId})`)
        $("#addProduct").modal('show');
    }

    function UpdateProduct(productId) {
        var productData = {
            "Id": productId,
            "Name": $("#name").val(),
            "StoreId": @ViewBag.StoreDetails.Id,
            "Price": $("#price").val(),
            "ImageUrl": $("#image").val(),
            "Description": $("#description").val(),
        }
        $.post("/Store/UpdateProduct", productData, (data, status, xhr) => {
            if (status == "success") {
                alert("the product updated succesfully");
                window.location.href = "/Store/Index";
            } else {
                alert("error ocured while trying to save the product");
            }
        });
    }

    const deleteProduct = (productId) => {
        if (confirm("are you sure that you want to delete this product?")) {
            const pdata = { "productId": productId }
            $.post("/Store/RemoveProduct", pdata, (data, status, xhr) => {
                if (status == "success") {
                    alert("the prodduct deleted!");
                    window.location.href = "/Store/Index";
                } else {
                    alert("error ocured while trying to save the product");
                }
            });
        }
    }
</script>